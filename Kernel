uname -r
uname -a

dnf list | grep kernel
rpm -q --last <kernelversion>         >>this will tell when was the last kernel updated

yum update 

dnf -history 
dnf --info
dnf --help

we can also roll back a kernel


On centos;

Remove the newer kernel (after booting into the older one):

    Once booted into the older kernel, use yum history to find the transaction ID of the kernel update.
    Undo the update using yum history undo <transaction_id>. Alternatively, you can directly remove the newer kernel using yum remove <kernel_package_name>. For example, yum remove kernel-4.18.0-XXX.el8.x86_64
    Confirm the removal when prompted. 

4. Update GRUB (if necessary): 

    After removing the newer kernel, you might need to update the GRUB configuration to reflect the changes. You can use grub2-mkconfig -o /boot/grub2/grub.cfg to regenerate the GRUB configuration file. 

5. Reboot and verify: 

    Reboot your system.
    After the reboot, verify that you are now running the older kernel using uname -r. 
=================================================
On debian based

Edit the GRUB configuration:

    Use a text editor (like nano or vim) with root privileges to edit the /etc/default/grub file.
    Locate the line GRUB_DEFAULT=0 (or similar, it might reference a specific kernel).
    Change it to the correct entry from the GRUB menu, which might be a number corresponding to the kernel's position or the kernel's full name (as shown by ls /boot/).
    For example, if you want to make the second kernel on the list the default, you would change the line to GRUB_DEFAULT="1>Ubuntu, with Linux 5.15.0-25-generic" (this is an example, use the actual name from your system).

Update GRUB:

    After editing the file, run sudo update-grub (or sudo grub-mkconfig -o /boot/grub/grub.cfg on some systems) to apply the changes. 

==================================================================================

Question

what is the safest way to boot the RedHat Kernel with the previous kernel release
Cause

Sometimes is necessary to back out from the freshly upgraded kernel to the previous kernel for testing or because the newly updated kernel my introduce issues that were not present before.
Answer

One of the safest way to boot RedHat OS with a downgraded kernel is by modifying the /boot/grub/grub.conf

--Get the current Kernel information


[root@host001 nz]# uname -a
Linux car-lnasdwp-001 2.6.32-504.16.2.el6.x86_64 #1 SMP Tue Mar 10 17:01:00 EDT 2015 x86_64 x86_64 x86_64 GNU/Linux

--Edit the /boot/grub/grub.conf

[root@car-lnasdwp-002]# vi /boot/grub//grub.conf

grub.conf generated by anaconda
#
# Note that you do not have to rerun grub after making changes to this file
# NOTICE: You have a /boot partition. This means that
# all kernel and initrd paths are relative to /boot/, eg.
# root (hd0,1)
# kernel /vmlinuz-version ro root=/dev/sda5
# initrd /initrd-[generic-]version.img
#boot=/dev/sda
default=0 ---> change this value to "1"
timeout=5
splashimage=(hd0,1)/grub/splash.xpm.gz
hiddenmenu
title Red Hat Enterprise Linux Server (2.6.32-504.16.2.el6.x86_64)
root (hd0,1)
kernel /vmlinuz-2.6.32-504.16.2.el6.x86_64 ro root=UUID=ffb892af-41e8-4002-beb0-e79d93367445 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet
initrd /initramfs-2.6.32-504.16.2.el6.x86_64.img
title Red Hat Enterprise Linux (2.6.32-358.el6.x86_64)
root (hd0,1)
kernel /vmlinuz-2.6.32-358.el6.x86_64 ro root=UUID=ffb892af-41e8-4002-beb0-e79d93367445 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet
initrd /initramfs-2.6.32-358.el6.x86_64.img
~
2- Save the file

3- Reboot the host

4- Redhat has booted with the previous kernel release

[root@host-002 ~]# uname -a
Linux car-lnasdwp-002 2.6.32-431.17.1.el6.x86_64 #1 SMP Fri Apr 11 17:27:00 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux

5- You can check the list of available kernels:

[root@host-002 /]# rpm -qa | grep -i kernel
dracut-kernel-004-356.el6_6.2.noarch
kernel-firmware-2.6.32-504.16.2.el6.noarch
kernel-2.6.32-431.17.1.el6.x86_64
abrt-addon-kerneloops-2.0.8-26.el6.x86_64
kernel-devel-2.6.32-504.16.2.el6.x86_64
kernel-devel-2.6.32-431.17.1.el6.x86_64
kernel-headers-2.6.32-504.16.2.el6.x86_64
libreport-plugin-kerneloops-2.0.9-21.el6.x86_64
kernel-devel-2.6.32-358.el6.x86_64
kernel-2.6.32-504.16.2.el6.x86_64
kernel-2.6.32-358.el6.x86_64
[root@car-lnasdwp-001 /]# rpm -e kernel-devel-2.6.32-504.16.2.el6.x86_64
[root@car-lnasdwp-001 /]# rpm -e kernel-2.6.32-504.16.2.el6.x86_64


NOTE:

You can always revert to the original kernel by setting the grub.conf file back to 0 and reboot as long as you did not remove any of the kernels files for that release.
